name: Main and Dev Branch Workflow

on:
  push:
    branches:
      - main
    paths:
      - '.env'
      - 'settings/**'
  release:
    types:
      - published

permissions:
    id-token: write
    contents: write

jobs:
  create-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::489994096722:role/oidc_assume_role-dev
          role-session-name: infraworkersession
          aws-region: us-west-2 

      - name: Check conditions and Set Release Status
        id: set_release
        run: |
          if [ "${{ github.event_name }}" = "push" ]; then
            # Add your custom conditions here to determine the release status
            if [ "${{ github.ref }}" = "refs/heads/dev" ]; then
                echo "Running bash script for dev branch: Hello World!"
                chmod +x bash.sh
                bash bash.sh
            else     
                echo "branch doesnot exist"
              fi
          fi
      

  run-workflow:
    needs: create-release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::489994096722:role/oidc_assume_role-dev
          role-session-name: infraworkersession
          aws-region: us-west-2 

      - name: Check Branch and Run
        run: |
          if [ "${{ github.event_name }}" = "push" ]; then
              if [ "${{ github.ref }}" = "refs/heads/main"  ]; then
                echo "Release is successful. Proceeding with zipping code and sending to S3."
                # Generate a unique version number or tag for your release
                # VERSION=$(date '+%Y%m%d%H%M%S')
                # ZIP_FILENAME="release_${VERSION}.zip"

                # Create a zip file with the necessary files
                zip -r sehel .env settings/

                # Upload the zip file to the S3 bucket
                aws s3 cp sehel s3://sehel/pass/

                echo "Workflow completed successfully."
              else
                echo "Release failed. Sending zip code to S3 fail folder."

                # Continue with your steps to upload the zip file to the S3 fail folder
                VERSION=$(date '+%Y%m%d%H%M%S')
                ZIP_FILENAME="release_${VERSION}.zip"
                aws s3 cp $ZIP_FILENAME s3://sehel/fail/
              fi
            fi



  check-new-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Check for new release
        run: |
          if [ "${{ github.event_name }}" = "release" ]; then
            echo "New release detected. Running empty workflow."
          else
            echo "No new release detected. Skipping empty workflow."
            exit 0
          fi
